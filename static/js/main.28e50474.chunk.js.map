{"version":3,"sources":["components/Button.module.scss","components/Card.module.scss","containers/App.module.scss","components/Card.tsx","components/Button.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Card","joke","className","styles","container","setup","delivery","Button","generateJoke","copyInputValue","runJokeCommand","onSubmit","e","preventDefault","target","reset","form","input","user","inputField","onKeyPress","onChange","type","App","useState","setJoke","inputValue","setInputValue","terminalInstructions","setTerminalInstructions","fetch","then","response","json","jokes","useEffect","terminalText","key","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,WAAa,2BAA2B,cAAc,4BAA4B,KAAO,uB,gBCA/KD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,SAAW,yB,gBCA7FD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,KAAO,kBAAkB,aAAe,4B,wICwB9EC,EAbS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,qBAAKF,UAAU,SAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAWC,IAAOE,MAAvB,iBAAmD,kBAATJ,EAAP,OAA2BA,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMI,MAAQJ,KAC5E,sBAAKC,UAAWC,IAAOG,SAAvB,iBAAsD,kBAATL,EAAP,OAA2BA,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMK,SAAWL,a,gBCmB7EM,EA5BW,SAAC,GAIrB,EAHJC,aAGK,IAFLC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEA,OACE,uBACEC,SAAU,SAACC,GACTA,EAAEC,iBAEFD,EAAEE,OAAOC,SAEXb,UAAWC,IAAOa,KANpB,UAQG,IACD,sBAAKd,UAAWC,IAAOc,MAAvB,UACE,8BAAK,sBAAMf,UAAWC,IAAOe,KAAxB,wBACL,uBACEhB,UAAWC,IAAOgB,WAClBC,WAAYV,EACZW,SAAUZ,EACVa,KAAK,gB,gBCyCAC,EA7DH,WAAO,IAAD,EACQC,mBAA4B,IADpC,mBACTvB,EADS,KACHwB,EADG,OAEoBD,qBAFpB,mBAETE,EAFS,KAEGC,EAFH,OAGwCH,mBACtD,yDAJc,mBAGTI,EAHS,KAGaC,EAHb,KAOVrB,EAAe,WACnBsB,MAAM,8DACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJT,EAAQ,CACNpB,MAAO6B,EAAM7B,MACbC,SAAU4B,EAAM5B,eAiCxB,OAJA6B,qBAAU,WACR3B,MACC,IAGD,sBAAKN,UAAWC,IAAOC,UAAvB,UACE,cAAC,EAAD,CAAMH,KAAMA,IACZ,sBAAKC,UAAWC,IAAOiC,aAAvB,UACE,sBAAMlC,UAAWC,IAAOe,KAAxB,sBACCU,KAEH,cAAC,EAAD,CACElB,eA7BiB,SAACE,GACH,iBAAfc,EACY,UAAVd,EAAEyB,MACJ7B,IACAmB,EAAc,IACdE,EAAwB,0BAAD,OAZjB,iBAYiB,uBAIN,UAAVjB,EAAEyB,KAAkC,KAAfX,IAC9BG,EAAwB,GAAD,OAClBH,EADkB,+BACeE,IAEtCD,EAAc,MAiBZlB,eAnCiB,SAACG,GAA4C,IAC1DE,EAAWF,EAAXE,OACRa,EAAcb,EAAOwB,QAkCjB9B,aAAcA,QCpDP+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.28e50474.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__2kqeG\",\"input\":\"Button_input__3Ye1q\",\"inputField\":\"Button_inputField__2i2uu\",\"blink-empty\":\"Button_blink-empty__HkVET\",\"user\":\"Button_user__3iPmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3-QBl\",\"setup\":\"Card_setup__1JWnY\",\"delivery\":\"Card_delivery__3kloS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__vrw6U\",\"user\":\"App_user__2yrsn\",\"terminalText\":\"App_terminalText__3Va44\"};","import React, { FC } from 'react';\nimport styles from './Card.module.scss';\n\ninterface Props {\n  joke:\n  | {\n    setup: string;\n    delivery: string;\n  }\n  | string;\n}\n\nconst Card: FC<Props> = ({ joke }) => {\n  return (\n    <div className={styles.container}>\n      <div className=\"window\">\n        <div className=\"joke\">\n          <div className={styles.setup}>### {typeof joke !== 'string' ? joke?.setup : joke}</div>\n          <div className={styles.delivery}>### {typeof joke !== 'string' ? joke?.delivery : joke}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { FC } from 'react';\nimport styles from './Button.module.scss';\n\ninterface Props {\n  generateJoke: () => void;\n  copyInputValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  runJokeCommand: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst Button: FC<Props> = ({\n  generateJoke,\n  copyInputValue,\n  runJokeCommand,\n}) => {\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        // @ts-ignore\n        e.target.reset();\n      }}\n      className={styles.form}\n    >\n      {' '}\n      <div className={styles.input}>\n        <div><span className={styles.user}>user:~$ </span></div>\n        <input\n          className={styles.inputField}\n          onKeyPress={runJokeCommand}\n          onChange={copyInputValue}\n          type=\"text\"\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Button from '../components/Button';\nimport styles from './App.module.scss';\n\ntype JokeType = {\n  setup: string;\n  delivery: string;\n};\n\nconst App = () => {\n  const [joke, setJoke] = useState<JokeType | string>('');\n  const [inputValue, setInputValue] = useState<string>();\n  const [terminalInstructions, setTerminalInstructions] = useState<string>(\n    'To get a new joke run $ npm run joke in your terminal',\n  );\n\n  const generateJoke = () => {\n    fetch('https://sv443.net/jokeapi/v2/joke/Programming?type=twopart')\n      .then((response) => response.json())\n      .then((jokes) =>\n        setJoke({\n          setup: jokes.setup,\n          delivery: jokes.delivery,\n        }),\n      );\n  };\n\n  const npm = '$ npm run joke';\n\n  const copyInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    setInputValue(target.value);\n  };\n\n  const runJokeCommand = (e: { key: string }) => {\n    if (inputValue === 'npm run joke') {\n      if (e.key === 'Enter') {\n        generateJoke();\n        setInputValue('');\n        setTerminalInstructions(\n          `To get a new joke type ${npm} in your terminal`,\n        );\n      }\n    } else if (e.key === 'Enter' && inputValue !== '') {\n      setTerminalInstructions(\n        `${inputValue}: command not found ${terminalInstructions}`,\n      );\n      setInputValue('');\n    }\n  };\n\n  useEffect(() => {\n    generateJoke();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <Card joke={joke!} />\n      <div className={styles.terminalText}>\n        <span className={styles.user}>user:~$ </span>\n        {terminalInstructions}\n      </div>\n      <Button\n        runJokeCommand={runJokeCommand}\n        copyInputValue={copyInputValue}\n        generateJoke={generateJoke}\n      />\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}